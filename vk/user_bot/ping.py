import psutil
from datetime import datetime
from vk.user_bot.admin.warnings import get_warns
from . import dlp, ND
import time


pings = {
    "–ø–∏–Ω–≥": "–ü–û–ù–ì",
    "–∫–∏–Ω–≥": "–ö–û–ù–ì",
    "–ø–∏—É": "–ü–ê–£",
    "—Ç–∏–∫": "–¢–û–ö",
    "ping": "PONG",
    "–±–∏–±–∞": "–ë–û–ë–ê"
}


def pingvk(vk, method='', **kwargs) -> float:
    ct = time.time()
    if method: vk(method, **kwargs)
    else: vk.exe('return 0;')
    return round((time.time() - ct) * 1000, 1)


@dlp.register(*pings.keys())
def ping(nd: ND):
    delta = round(nd.time - nd[4], 1)
    msg = f"{pings.get(nd[5], '–∫–æ—Ä–æ—á–µ –æ—Ç–≤–µ—Ç')} LP\n–ü–æ–ª—É—á–µ–Ω–æ –∑–∞ {delta}(¬±0.5)—Å."
    nd.vk.msg_op(2, nd[3], msg + get_warns(), nd[1])


@dlp.register('–ø–µ–Ω–≥')
def peng(nd: ND):
    delta = round(nd.time - nd[4], 3)
    msg = f"""
    Ping:
    Received for {delta} s
    Processed for {round((datetime.now().timestamp() - nd.time) * 1000, 1)} ms
    Ping VK: {pingvk(nd.vk)} ms
    ‚öô –ó–∞–Ω—è—Ç–æ—Å—Ç—å –û–ó–£ : {round(psutil.virtual_memory()[3] / 2. ** 30, 2)}GB –∏–∑ {round(psutil.virtual_memory()[0] / 2. ** 30, 2)}GB
    üìà –ó–∞–Ω—è—Ç–æ—Å—Ç—å –¶–ü–£ {round(psutil.cpu_percent())} %
    üìÄ –î–∏—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ {(psutil.disk_usage('/')[3])}%""".replace('    ', '')
    nd.msg_op(2, msg)
